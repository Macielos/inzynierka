/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2016-01-08 17:48:37 UTC)
 * on 2016-02-01 at 02:49:41 UTC 
 * Modify at your own risk.
 */

package com.explorersguild.entities.players.itemtypeendpoint;

/**
 * Service definition for Itemtypeendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ItemtypeendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Itemtypeendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the itemtypeendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://explorersguild-1199.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "itemtypeendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Itemtypeendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Itemtypeendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getItemType".
   *
   * This request holds the parameters needed by the itemtypeendpoint server.  After setting any
   * optional parameters, call the {@link GetItemType#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetItemType getItemType(java.lang.Long id) throws java.io.IOException {
    GetItemType result = new GetItemType(id);
    initialize(result);
    return result;
  }

  public class GetItemType extends ItemtypeendpointRequest<com.explorersguild.entities.players.itemtypeendpoint.model.ItemType> {

    private static final String REST_PATH = "itemtype/{id}";

    /**
     * Create a request for the method "getItemType".
     *
     * This request holds the parameters needed by the the itemtypeendpoint server.  After setting any
     * optional parameters, call the {@link GetItemType#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetItemType#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetItemType(java.lang.Long id) {
      super(Itemtypeendpoint.this, "GET", REST_PATH, null, com.explorersguild.entities.players.itemtypeendpoint.model.ItemType.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetItemType setAlt(java.lang.String alt) {
      return (GetItemType) super.setAlt(alt);
    }

    @Override
    public GetItemType setFields(java.lang.String fields) {
      return (GetItemType) super.setFields(fields);
    }

    @Override
    public GetItemType setKey(java.lang.String key) {
      return (GetItemType) super.setKey(key);
    }

    @Override
    public GetItemType setOauthToken(java.lang.String oauthToken) {
      return (GetItemType) super.setOauthToken(oauthToken);
    }

    @Override
    public GetItemType setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetItemType) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetItemType setQuotaUser(java.lang.String quotaUser) {
      return (GetItemType) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetItemType setUserIp(java.lang.String userIp) {
      return (GetItemType) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetItemType setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetItemType set(String parameterName, Object value) {
      return (GetItemType) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getItemTypes".
   *
   * This request holds the parameters needed by the itemtypeendpoint server.  After setting any
   * optional parameters, call the {@link GetItemTypes#execute()} method to invoke the remote
   * operation.
   *
   * @param ids
   * @return the request
   */
  public GetItemTypes getItemTypes(java.lang.String ids) throws java.io.IOException {
    GetItemTypes result = new GetItemTypes(ids);
    initialize(result);
    return result;
  }

  public class GetItemTypes extends ItemtypeendpointRequest<com.explorersguild.entities.players.itemtypeendpoint.model.CollectionResponseItemType> {

    private static final String REST_PATH = "collectionresponse_itemtype/{ids}";

    /**
     * Create a request for the method "getItemTypes".
     *
     * This request holds the parameters needed by the the itemtypeendpoint server.  After setting any
     * optional parameters, call the {@link GetItemTypes#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetItemTypes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param ids
     * @since 1.13
     */
    protected GetItemTypes(java.lang.String ids) {
      super(Itemtypeendpoint.this, "GET", REST_PATH, null, com.explorersguild.entities.players.itemtypeendpoint.model.CollectionResponseItemType.class);
      this.ids = com.google.api.client.util.Preconditions.checkNotNull(ids, "Required parameter ids must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetItemTypes setAlt(java.lang.String alt) {
      return (GetItemTypes) super.setAlt(alt);
    }

    @Override
    public GetItemTypes setFields(java.lang.String fields) {
      return (GetItemTypes) super.setFields(fields);
    }

    @Override
    public GetItemTypes setKey(java.lang.String key) {
      return (GetItemTypes) super.setKey(key);
    }

    @Override
    public GetItemTypes setOauthToken(java.lang.String oauthToken) {
      return (GetItemTypes) super.setOauthToken(oauthToken);
    }

    @Override
    public GetItemTypes setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetItemTypes) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetItemTypes setQuotaUser(java.lang.String quotaUser) {
      return (GetItemTypes) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetItemTypes setUserIp(java.lang.String userIp) {
      return (GetItemTypes) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String ids;

    /**

     */
    public java.lang.String getIds() {
      return ids;
    }

    public GetItemTypes setIds(java.lang.String ids) {
      this.ids = ids;
      return this;
    }

    @Override
    public GetItemTypes set(String parameterName, Object value) {
      return (GetItemTypes) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getRandomItemsByType".
   *
   * This request holds the parameters needed by the itemtypeendpoint server.  After setting any
   * optional parameters, call the {@link GetRandomItemsByType#execute()} method to invoke the remote
   * operation.
   *
   * @param limit
   * @param level
   * @param itemClass
   * @return the request
   */
  public GetRandomItemsByType getRandomItemsByType(java.lang.Integer limit, java.lang.Integer level, java.lang.String itemClass) throws java.io.IOException {
    GetRandomItemsByType result = new GetRandomItemsByType(limit, level, itemClass);
    initialize(result);
    return result;
  }

  public class GetRandomItemsByType extends ItemtypeendpointRequest<com.explorersguild.entities.players.itemtypeendpoint.model.CollectionResponseItemType> {

    private static final String REST_PATH = "collectionresponse_itemtype/{limit}/{level}/{itemClass}";

    /**
     * Create a request for the method "getRandomItemsByType".
     *
     * This request holds the parameters needed by the the itemtypeendpoint server.  After setting any
     * optional parameters, call the {@link GetRandomItemsByType#execute()} method to invoke the
     * remote operation. <p> {@link GetRandomItemsByType#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param limit
     * @param level
     * @param itemClass
     * @since 1.13
     */
    protected GetRandomItemsByType(java.lang.Integer limit, java.lang.Integer level, java.lang.String itemClass) {
      super(Itemtypeendpoint.this, "GET", REST_PATH, null, com.explorersguild.entities.players.itemtypeendpoint.model.CollectionResponseItemType.class);
      this.limit = com.google.api.client.util.Preconditions.checkNotNull(limit, "Required parameter limit must be specified.");
      this.level = com.google.api.client.util.Preconditions.checkNotNull(level, "Required parameter level must be specified.");
      this.itemClass = com.google.api.client.util.Preconditions.checkNotNull(itemClass, "Required parameter itemClass must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetRandomItemsByType setAlt(java.lang.String alt) {
      return (GetRandomItemsByType) super.setAlt(alt);
    }

    @Override
    public GetRandomItemsByType setFields(java.lang.String fields) {
      return (GetRandomItemsByType) super.setFields(fields);
    }

    @Override
    public GetRandomItemsByType setKey(java.lang.String key) {
      return (GetRandomItemsByType) super.setKey(key);
    }

    @Override
    public GetRandomItemsByType setOauthToken(java.lang.String oauthToken) {
      return (GetRandomItemsByType) super.setOauthToken(oauthToken);
    }

    @Override
    public GetRandomItemsByType setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetRandomItemsByType) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetRandomItemsByType setQuotaUser(java.lang.String quotaUser) {
      return (GetRandomItemsByType) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetRandomItemsByType setUserIp(java.lang.String userIp) {
      return (GetRandomItemsByType) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public GetRandomItemsByType setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer level;

    /**

     */
    public java.lang.Integer getLevel() {
      return level;
    }

    public GetRandomItemsByType setLevel(java.lang.Integer level) {
      this.level = level;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String itemClass;

    /**

     */
    public java.lang.String getItemClass() {
      return itemClass;
    }

    public GetRandomItemsByType setItemClass(java.lang.String itemClass) {
      this.itemClass = itemClass;
      return this;
    }

    @Override
    public GetRandomItemsByType set(String parameterName, Object value) {
      return (GetRandomItemsByType) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertItemType".
   *
   * This request holds the parameters needed by the itemtypeendpoint server.  After setting any
   * optional parameters, call the {@link InsertItemType#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.explorersguild.entities.players.itemtypeendpoint.model.ItemType}
   * @return the request
   */
  public InsertItemType insertItemType(com.explorersguild.entities.players.itemtypeendpoint.model.ItemType content) throws java.io.IOException {
    InsertItemType result = new InsertItemType(content);
    initialize(result);
    return result;
  }

  public class InsertItemType extends ItemtypeendpointRequest<com.explorersguild.entities.players.itemtypeendpoint.model.ItemType> {

    private static final String REST_PATH = "itemtype";

    /**
     * Create a request for the method "insertItemType".
     *
     * This request holds the parameters needed by the the itemtypeendpoint server.  After setting any
     * optional parameters, call the {@link InsertItemType#execute()} method to invoke the remote
     * operation. <p> {@link InsertItemType#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.explorersguild.entities.players.itemtypeendpoint.model.ItemType}
     * @since 1.13
     */
    protected InsertItemType(com.explorersguild.entities.players.itemtypeendpoint.model.ItemType content) {
      super(Itemtypeendpoint.this, "POST", REST_PATH, content, com.explorersguild.entities.players.itemtypeendpoint.model.ItemType.class);
    }

    @Override
    public InsertItemType setAlt(java.lang.String alt) {
      return (InsertItemType) super.setAlt(alt);
    }

    @Override
    public InsertItemType setFields(java.lang.String fields) {
      return (InsertItemType) super.setFields(fields);
    }

    @Override
    public InsertItemType setKey(java.lang.String key) {
      return (InsertItemType) super.setKey(key);
    }

    @Override
    public InsertItemType setOauthToken(java.lang.String oauthToken) {
      return (InsertItemType) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertItemType setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertItemType) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertItemType setQuotaUser(java.lang.String quotaUser) {
      return (InsertItemType) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertItemType setUserIp(java.lang.String userIp) {
      return (InsertItemType) super.setUserIp(userIp);
    }

    @Override
    public InsertItemType set(String parameterName, Object value) {
      return (InsertItemType) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listItemType".
   *
   * This request holds the parameters needed by the itemtypeendpoint server.  After setting any
   * optional parameters, call the {@link ListItemType#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListItemType listItemType() throws java.io.IOException {
    ListItemType result = new ListItemType();
    initialize(result);
    return result;
  }

  public class ListItemType extends ItemtypeendpointRequest<com.explorersguild.entities.players.itemtypeendpoint.model.CollectionResponseItemType> {

    private static final String REST_PATH = "itemtype";

    /**
     * Create a request for the method "listItemType".
     *
     * This request holds the parameters needed by the the itemtypeendpoint server.  After setting any
     * optional parameters, call the {@link ListItemType#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListItemType#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListItemType() {
      super(Itemtypeendpoint.this, "GET", REST_PATH, null, com.explorersguild.entities.players.itemtypeendpoint.model.CollectionResponseItemType.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListItemType setAlt(java.lang.String alt) {
      return (ListItemType) super.setAlt(alt);
    }

    @Override
    public ListItemType setFields(java.lang.String fields) {
      return (ListItemType) super.setFields(fields);
    }

    @Override
    public ListItemType setKey(java.lang.String key) {
      return (ListItemType) super.setKey(key);
    }

    @Override
    public ListItemType setOauthToken(java.lang.String oauthToken) {
      return (ListItemType) super.setOauthToken(oauthToken);
    }

    @Override
    public ListItemType setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListItemType) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListItemType setQuotaUser(java.lang.String quotaUser) {
      return (ListItemType) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListItemType setUserIp(java.lang.String userIp) {
      return (ListItemType) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListItemType setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListItemType setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListItemType set(String parameterName, Object value) {
      return (ListItemType) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeItemType".
   *
   * This request holds the parameters needed by the itemtypeendpoint server.  After setting any
   * optional parameters, call the {@link RemoveItemType#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveItemType removeItemType(java.lang.Long id) throws java.io.IOException {
    RemoveItemType result = new RemoveItemType(id);
    initialize(result);
    return result;
  }

  public class RemoveItemType extends ItemtypeendpointRequest<Void> {

    private static final String REST_PATH = "itemtype/{id}";

    /**
     * Create a request for the method "removeItemType".
     *
     * This request holds the parameters needed by the the itemtypeendpoint server.  After setting any
     * optional parameters, call the {@link RemoveItemType#execute()} method to invoke the remote
     * operation. <p> {@link RemoveItemType#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveItemType(java.lang.Long id) {
      super(Itemtypeendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveItemType setAlt(java.lang.String alt) {
      return (RemoveItemType) super.setAlt(alt);
    }

    @Override
    public RemoveItemType setFields(java.lang.String fields) {
      return (RemoveItemType) super.setFields(fields);
    }

    @Override
    public RemoveItemType setKey(java.lang.String key) {
      return (RemoveItemType) super.setKey(key);
    }

    @Override
    public RemoveItemType setOauthToken(java.lang.String oauthToken) {
      return (RemoveItemType) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveItemType setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveItemType) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveItemType setQuotaUser(java.lang.String quotaUser) {
      return (RemoveItemType) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveItemType setUserIp(java.lang.String userIp) {
      return (RemoveItemType) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveItemType setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveItemType set(String parameterName, Object value) {
      return (RemoveItemType) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Itemtypeendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Itemtypeendpoint}. */
    @Override
    public Itemtypeendpoint build() {
      return new Itemtypeendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ItemtypeendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setItemtypeendpointRequestInitializer(
        ItemtypeendpointRequestInitializer itemtypeendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(itemtypeendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
